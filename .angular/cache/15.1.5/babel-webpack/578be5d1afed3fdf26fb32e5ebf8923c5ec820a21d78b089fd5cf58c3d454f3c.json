{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Message } from '../../shared/models/message.model';\nimport { fadeStateTrigger } from '../../shared/animations/fade.animation';\nlet LoginComponent = class LoginComponent {\n  constructor(usersService, authService, router, route, title, meta, usersFirebaseService) {\n    this.usersService = usersService;\n    this.authService = authService;\n    this.router = router;\n    this.route = route;\n    this.title = title;\n    this.meta = meta;\n    this.usersFirebaseService = usersFirebaseService;\n    this.message = new Message();\n    title.setTitle('Вход в систему');\n  }\n  ngOnInit() {\n    this.form = new FormGroup({\n      ['email']: new FormControl(null, [Validators.required, Validators.email]),\n      ['password']: new FormControl(null, [Validators.required, Validators.minLength(6)])\n    });\n    this.route.queryParams.subscribe(params => {\n      if (params['nowCanlogin']) {\n        this.message.showMessage('success', 'Теперь Вы можете войти.');\n      } else if (params['accessDenied']) {\n        this.message.showMessage('warning', 'Для работи с системой вам нужно войти');\n      } else if (params['asVisitor']) {\n        const dataVisitor = {\n          email: 'visitor@mail.ru',\n          password: '12345678'\n        };\n        this.form.setValue(dataVisitor);\n      }\n    });\n  }\n  onSubmit() {\n    const formData = this.form.value;\n    console.log(formData.email);\n    this.usersService.getUserByEmail(formData.email).subscribe(user => {\n      if (user) {\n        if (user.password === formData.password) {\n          window.localStorage.setItem('user', JSON.stringify(user));\n          this.authService.login();\n          this.router.navigate(['/system', 'bill']);\n        } else {\n          this.message.showMessage('danger', 'Пароль не верный');\n        }\n      } else {\n        this.message.showMessage('danger', 'Пользователь не существует');\n      }\n    });\n  }\n  OnCancel() {\n    this.router.navigate(['']);\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'degys-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  animations: [fadeStateTrigger]\n})], LoginComponent);\nexport { LoginComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}