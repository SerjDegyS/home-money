{"ast":null,"code":"import { EventEmitter } from '@angular/core';\n// <<<<<<< HEAD\n// import {isBoolean} from 'util';\n// =======\n// // import {isBoolean} from 'util';\n// >>>>>>> d309e62 (create new branch master-firebase)\nimport { ChooseEvent } from '../../../shared/models/choose-event.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../../shared/pipes/moment.pipe\";\nfunction AddEventChooseComponent_tr_16_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\u0434\\u043E\\u0445\\u043E\\u0434\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEventChooseComponent_tr_16_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\u0440\\u0430\\u0441\\u0445\\u043E\\u0434\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEventChooseComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\")(2, \"input\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function AddEventChooseComponent_tr_16_Template_input_ngModelChange_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const e_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(e_r1.checked = $event);\n    })(\"change\", function AddEventChooseComponent_tr_16_Template_input_change_2_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onToggle());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"th\", 6);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 6);\n    i0.ɵɵtemplate(6, AddEventChooseComponent_tr_16_span_6_Template, 2, 0, \"span\", 7);\n    i0.ɵɵtemplate(7, AddEventChooseComponent_tr_16_span_7_Template, 2, 0, \"span\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\", 6);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\", 8);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\", 6);\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"degysMoment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"th\")(16, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function AddEventChooseComponent_tr_16_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const idx_r2 = restoredCtx.index;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.removeEvent(idx_r2));\n    });\n    i0.ɵɵelementStart(17, \"span\", 10);\n    i0.ɵɵtext(18, \"\\u00D7\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const e_r1 = ctx.$implicit;\n    const idx_r2 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", e_r1.checked);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(idx_r2 + 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"color\", e_r1.event.type === \"outcome\" ? \"red\" : \"green\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", e_r1.event.type === \"income\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", e_r1.event.type === \"outcome\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(e_r1.event.amount);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(e_r1.event.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind3(14, 9, e_r1.event.date, \"DD.MM.YYYY HH:mm:ss\", \"HH:mm DD/MM/YY\"));\n  }\n}\nexport let AddEventChooseComponent = /*#__PURE__*/(() => {\n  class AddEventChooseComponent {\n    constructor() {\n      this.choosedEvents = new EventEmitter();\n      this.selectAll = true;\n      this.eventsOption = new Array();\n      this.totalAmount = 0;\n    }\n    ngOnInit() {\n      this.addedEventSubscription = this.addedEvent.subscribe(event => {\n        if (event !== null) {\n          this.eventsOption.push(new ChooseEvent(event, true));\n          this.onToggle();\n        } else {\n          this.eventsOption = this.eventsOption.filter(i => !i.checked);\n          this.onToggle();\n        }\n      });\n    }\n    removeEvent(index) {\n      this.eventsOption.splice(index, 1);\n      this.onToggle();\n    }\n    checkAll() {\n      this.eventsOption.map(i => i.checked = this.selectAll);\n      this.onToggle();\n    }\n    onToggle() {\n      const checkedOptions = this.eventsOption.filter(i => i.checked);\n      this.calculateTotalAmount();\n      this.choosedEvents.emit({\n        events: checkedOptions.map(i => i.event),\n        totalAmount: this.totalAmount\n      });\n    }\n    calculateTotalAmount() {\n      this.totalAmount = this.eventsOption.reduce((acumulateVal, currentVal) => {\n        if (currentVal.checked) {\n          return currentVal.event.type === 'outcome' ? acumulateVal - currentVal.event.amount : acumulateVal + currentVal.event.amount;\n        } else {\n          return acumulateVal;\n        }\n      }, 0);\n    }\n    ngOnDestroy() {\n      this.addedEventSubscription.unsubscribe();\n    }\n  }\n  AddEventChooseComponent.ɵfac = function AddEventChooseComponent_Factory(t) {\n    return new (t || AddEventChooseComponent)();\n  };\n  AddEventChooseComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEventChooseComponent,\n    selectors: [[\"degys-add-event-choose\"]],\n    inputs: {\n      addedEvent: \"addedEvent\"\n    },\n    outputs: {\n      choosedEvents: \"choosedEvents\"\n    },\n    decls: 20,\n    vars: 5,\n    consts: [[1, \"\", 2, \"overflow\", \"auto\"], [1, \"table\", \"table-striped\"], [\"scope\", \"col\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bill\", 2, \"float\", \"right\"], [\"scope\", \"row\"], [4, \"ngIf\"], [\"scope\", \"row\", 2, \"word-wrap\", \"break-word\", \"width\", \"50px\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", 2, \"color\", \"red\", 3, \"click\"], [\"aria-hidden\", \"true\"]],\n    template: function AddEventChooseComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1)(2, \"thead\")(3, \"th\", 2)(4, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function AddEventChooseComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.selectAll = $event;\n        })(\"change\", function AddEventChooseComponent_Template_input_change_4_listener() {\n          return ctx.checkAll();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"th\", 2);\n        i0.ɵɵtext(6, \"#\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"th\", 2);\n        i0.ɵɵtext(8, \"\\u0442\\u0438\\u043F\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"th\", 2);\n        i0.ɵɵtext(10, \"\\u0441\\u0443\\u043C\\u043C\\u0430\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"th\", 2);\n        i0.ɵɵtext(12, \"\\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"th\", 2);\n        i0.ɵɵtext(14, \"\\u0434\\u0430\\u0442\\u0430\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"tbody\");\n        i0.ɵɵtemplate(16, AddEventChooseComponent_tr_16_Template, 19, 13, \"tr\", 4);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(17, \"div\", 5)(18, \"label\");\n        i0.ɵɵtext(19);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectAll);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngForOf\", ctx.eventsOption);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"color\", ctx.totalAmount > 0 ? \"green\" : \"red\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\\u0412\\u043C\\u0435\\u0441\\u0442\\u0435: \", ctx.totalAmount, \"\");\n      }\n    },\n    dependencies: [i1.NgForOf, i1.NgIf, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgModel, i3.MomentPipe]\n  });\n  return AddEventChooseComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}