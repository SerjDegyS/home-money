{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Category } from '../../shared/models/category.model';\nimport { Message } from '../../../shared/models/message.model';\nimport { Subscription } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { fadeStateTrigger } from '../../../shared/animations/fade.animation';\nlet EditCategoryComponent = class EditCategoryComponent {\n  constructor(categoriesService, eventsService) {\n    this.categoriesService = categoriesService;\n    this.eventsService = eventsService;\n    this.categories = [];\n    this.onCategoryEdit = new EventEmitter();\n    this.onCategoryDelete = new EventEmitter();\n    this.sub = new Subscription();\n    this.currentCategoryId = 1;\n    this.billId = JSON.parse(window.localStorage.getItem('user')).bill;\n    this.message = new Message();\n  }\n  ngOnInit() {\n    // this.message = new Message('success', '');\n    this.onCategoryChange();\n    // this.currentCategory = this.categories[0];\n    console.log(this.categories + 'nnnnn');\n  }\n  onSubmit(form) {\n    // tslint:disable-next-line:prefer-const\n    let {\n      name,\n      capacity\n    } = form.value;\n    if (capacity < 0) {\n      capacity *= -1;\n    }\n    const category = new Category(name, capacity, this.billId, +this.currentCategory.id);\n    this.sub.add(this.categoriesService.updateCategory(category)\n    // tslint:disable-next-line:no-shadowed-variable\n    .subscribe(category => {\n      if (category) {\n        this.onCategoryEdit.emit(category);\n        this.message.showMessage('success', 'Каткгория успешно отредактирована.', 5000);\n      } else {\n        this.message.showMessage('danger', 'Произошла ошибка! Попробуйте еще раз...');\n      }\n    }));\n  }\n  onCategoryChange() {\n    this.currentCategory = this.categories.find(c => c.id === +this.currentCategoryId);\n  }\n  deleteGategory() {\n    this.onCategoryChange();\n    if (window.confirm(`Вы действительно хотите уалить категорию ${this.currentCategory.name.toUpperCase()} и связаные с нею события?`)) {\n      this.sub.add(this.eventsService.getEventsForCategories([this.currentCategory]).pipe(mergeMap(() => this.categoriesService.deleteCategory(this.currentCategory))).subscribe(catgory => {\n        this.onCategoryDelete.emit(catgory);\n        this.message.showMessage('danger', 'Каткгория и ее события успешно удалины.', 5000);\n        console.log(catgory);\n      }));\n    }\n  }\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n};\n__decorate([Input()], EditCategoryComponent.prototype, \"categories\", void 0);\n__decorate([Output()], EditCategoryComponent.prototype, \"onCategoryEdit\", void 0);\n__decorate([Output()], EditCategoryComponent.prototype, \"onCategoryDelete\", void 0);\nEditCategoryComponent = __decorate([Component({\n  selector: 'degys-edit-category',\n  templateUrl: './edit-category.component.html',\n  styleUrls: ['./edit-category.component.scss'],\n  animations: [fadeStateTrigger]\n})], EditCategoryComponent);\nexport { EditCategoryComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}